name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install core dependencies (skip optional LLM/DB packages for CI)
        pip install streamlit pandas pyyaml python-dotenv pytest flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run tests
      env:
        USE_MOCK_DATA: "true"
      run: |
        # Run tests without network dependencies
        python tests/test_router_policy.py
        python tests/test_optimizer_rules.py
        python tests/test_convert_board_to_cfn.py
    
    - name: Test import structure
      run: |
        python -c "from src.models.router import ModelRouter; print('✓ Router imports OK')"
        python -c "from src.services.rag_service import RAGService; print('✓ RAG service imports OK')"
        python -c "from src.services.excalidraw_service import ExcalidrawService; print('✓ Excalidraw service imports OK')"
        python -c "from src.agents.setup_buddy import SetupBuddyAgent; print('✓ Agents import OK')"
